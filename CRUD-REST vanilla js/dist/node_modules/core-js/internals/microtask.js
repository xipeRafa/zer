import global from'./global.js';import _ref2 from'./object-get-own-property-descriptor.js';import IS_IOS from'./engine-is-ios.js';import IS_NODE from'./engine-is-node.js';import _ref2$1 from'./task.js';const _ref={exports:{}};(function(module,exports){var flush,head,last,notify,toggle,node,promise,then,getOwnPropertyDescriptor=_ref2.f,macrotask=_ref2$1.set,MutationObserver=global.MutationObserver||global.WebKitMutationObserver,document=global.document,process=global.process,Promise=global.Promise,queueMicrotaskDescriptor=getOwnPropertyDescriptor(global,"queueMicrotask"),queueMicrotask=queueMicrotaskDescriptor&&queueMicrotaskDescriptor.value;queueMicrotask||(flush=function(){var parent,fn;for(IS_NODE&&(parent=process.domain)&&parent.exit();head;){fn=head.fn,head=head.next;try{fn();}catch(error){throw head?notify():last=void 0,error}}last=void 0,parent&&parent.enter();},!IS_IOS&&!IS_NODE&&MutationObserver&&document?(toggle=!0,node=document.createTextNode(""),new MutationObserver(flush).observe(node,{characterData:!0}),notify=function(){node.data=toggle=!toggle;}):Promise&&Promise.resolve?(promise=Promise.resolve(void 0),then=promise.then,notify=function(){then.call(promise,flush);}):IS_NODE?notify=function(){process.nextTick(flush);}:notify=function(){macrotask.call(global,flush);}),module.exports=queueMicrotask||function(fn){var task={fn:fn,next:void 0};last&&(last.next=task),head||(head=task,notify()),last=task;};})(_ref);var microtask = _ref.exports;export default microtask;